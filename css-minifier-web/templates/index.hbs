<!doctype html>

<html lang="en">
<head>
    <meta charset="utf-8">

    <title>CSS Minifier & Optimizer</title>
    <meta name="description" content="Online CSS compressor and optimizer. This site is an implementation of a fast open source CSS optimizer written in Rust.">
    <meta name="author" content="Mnwa">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Oswald&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/static/main.css?v=1.0.4">

</head>

<body>
<header class="header">
    <a href="/" class="brand">CSS Optimizer</a>
    <nav class="nav">
        <a href="https://github.com/Mnwa/css-minify" rel="nofollow noreferrer" target="_blank" class="link">Our Github</a>
    </nav>
</header>
{{ let input_css = input_css.as_ref().map(|s| s.as_str()).unwrap_or_default().trim() }}
<main class="main">
    <div class="container">
        <h1 class="heading">Css Minifier & Optimizer</h1>
        <h2 class="heading">This resource is an implementation of a fast open source CSS optimizer written in Rust.</h2>
        <form action="/" method="post">
            <div class="columns">
                <div class="column">
                    <label for="input_css">
                        <h3 class="heading">
                            Input CSS
                        </h3>
                    </label>

                    <textarea name="input_css" class="textarea" id="input_css" cols="30"
                              rows="20">{{ input_css }}</textarea>
                </div>
                <div class="column">
                    <label for="output_css">
                        <h3 class="heading">
                            Output CSS
                        </h3>
                    </label>
                    <textarea id="output_css" class="textarea" cols="30" rows="20" disabled>{{ output_css.as_ref().map(|s| s.as_str()).unwrap_or_default() }}</textarea>
                </div>
                <div class="column options">
                    <label>
                        Optimization Level:
                        <select name="level">
                            <option value="0" {{#if level == Level::Zero}}selected{{/if}}>Minification only</option>
                            <option value="1" {{#if level == Level::One}}selected{{/if}}>Non dangerous optimizations</option>
                            <option value="2" {{#if level == Level::Two}}selected{{/if}}>Shortcuts</option>
                            <option value="3" {{#if level == Level::Three}}selected{{/if}}>Merge blocks (may change block ordering)</option>
                        </select>
                    </label>
                    <button type="submit" class="submit">Minify</button>
                </div>
                {{#if let Some(output) = output_css.as_ref()}}
                    <div class="column">
                        {{ let size_diff = (input_css.len() - output.len()) }}
                        <span>
                            You saved: {{ 100 - (((output.len() as f64) / (input_css.len() as f64) * 100f64) as i64) }}%
                            {{#if size_diff > 1024 }}
                                ({{ size_diff / 1024 }} kb)
                            {{else}}
                                ({{ size_diff }} bytes)
                            {{/if}}
                        </span>
                    </div>
                {{/if}}
            </div>
        </form>

        <h2 id="cssminify">CSS minify</h2>
        <p><a href="https://github.com/Mnwa/css-minify/actions?query=workflow%3Aminify"><img
                src="https://github.com/Mnwa/css-minify/workflows/minify/badge.svg?branch=master" alt=""/></a>
            <a href="https://github.com/Mnwa/css-minify/actions?query=workflow%3Aclippy"><img
                    src="https://github.com/Mnwa/css-minify/workflows/clippy/badge.svg?branch=master" alt=""/></a>
            <a href="https://docs.rs/css-minify/"><img src="https://docs.rs/css-minify/badge.svg" alt=""/></a>
            <a href="https://crates.io/crates/css-minify"><img src="https://img.shields.io/crates/v/css-minify.svg"
                                                               alt=""/></a>
            <a href="https://crates.io/crates/css-minify"><img src="https://img.shields.io/crates/d/css-minify.svg"
                                                               alt=""/></a></p>

        <p>CSS minification library based on <code>nom</code>.
            This library parses css input, minifies it and applies some level-dependent optimizations to it.</p>

        <h3 class="heading">Example:</h3>
        <pre class="code-block"><code class="rust language-rust">use css_minify::optimizations::{Minifier, Level};
fn main() {
    assert_eq!(
        Minifier::default().minify(
            r#"
                 #some_id, input {
                     padding: 5px 3px; /* Mega comment */
                     color: white;
                 }
             "#,
            Level::Three
        ),
        Ok("#some_id,input{padding:5px 3px;color:white}".into())
    )
}
        </code></pre>
    </div>
</main>
<footer class="footer">
    <span>Â© 2021 Powered by</span>&nbsp;<a target="_blank" class="link" rel="nofollow noreferrer" href="https://github.com/Mnwa">Mnwa</a>
</footer>
</body>
</html>